#include <iostream>
#include <vector>

using namespace std;

vector<pair<int, int>> v[100001];
int dist,node;
bool visit[100001];

void dfs(int x, int d) {
	visit[x] = true;

	if (d > dist) {
		node = x;
		dist = d;
	}

	for (int i = 0; i < v[x].size(); i++) {
		int tmpx = v[x][i].first;
		int tmpd = v[x][i].second+d;
		if (!visit[tmpx]) {
			visit[tmpx] = true;
			dfs(tmpx, tmpd);
		}
	}
}

int main() {
	int V,a,b,c;
	cin >> V;
	int tmpv = V;
	while (V--) {
		cin >> a;
		while (1) {
			cin >> b;
			if (b == -1) {
				break;
			}
			cin >> c;
			v[a].push_back({ b,c });
	
		}
	}
	
	dfs(1, 0);
	dist = 0;
	for (int i = 1; i <= tmpv; i++) {
		visit[i] = false;
	}
	dfs(node, 0);
	cout << dist;
	return 0;
}
