#include <iostream>
#include <vector>
#include <queue>
using namespace std;

#define endl "\n";
int V, E, K;
#define INF 987654321
vector<pair<int, int>> adj[20010];
int dist[20010];

void input() {
	cin >> V >> E >> K;

	for (int i = 0; i < E; i++) {
		int u, v, w;
		cin >> u >> v >> w;

		adj[u].push_back({ v,w });
	}
	// 모든 점의 가중치를 무한으로 설정
	for (int i = 1; i <= V; i++) {
		dist[i] = INF;
	}

}

void solve() {
	priority_queue<pair<int, int>> pq;
	dist[K] = 0;
	pq.push({ 0,K });
	// 0은 첫 가중치이므로 0, K는 시작위치


	while (!pq.empty()) {
		int sum = -pq.top().first;
		int cur = pq.top().second;
		pq.pop();

		for (int i = 0; i < adj[cur].size(); i++) {
			int nSum = adj[cur][i].second;
			int next = adj[cur][i].first;

			if (nSum +sum <dist[next]) {
				dist[next] = nSum+sum;
				pq.push({ -dist[next],next});
			}
		}
	}

	for (int i = 1; i <= V /*5*/; i++) {
		if (dist[i] == INF) {
			cout << "INF\n";
		}
		else {
			cout << dist[i] << "\n";
		}
	}

}

void resolve() {
	input();
	solve();
}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	resolve();
	return 0;
}
