#include <iostream>
#include <queue>
#include <vector>
using namespace std;

#define MAX 100001
priority_queue<pair<int, int>, vector<pair<int, int>>,
	greater<pair<int, int>>> pq;
bool visited[MAX];


int main() {
	int N, K;
	cin >> N >> K;

	pq.push({ 0,N });
	visited[N] = true;

	while (!pq.empty()) {
		int cost = pq.top().first;
		int cur = pq.top().second;
		pq.pop();

		if (cur == K) {
			cout << cost;
			break;
		}

		if (cur * 2 < MAX && !visited[cur * 2]) {
			pq.push({ cost,cur * 2 });
			visited[cur * 2] = true;
		}
		if (cur + 1 < MAX && !visited[cur + 1]) {
			pq.push({ cost + 1,cur + 1 });
			visited[cur + 1] = true;
		}
		if (cur - 1 >=0 && !visited[cur - 1]) {
			pq.push({ cost + 1,cur - 1 });
			visited[cur - 1] = true;
		}
	}
	return 0;
}
