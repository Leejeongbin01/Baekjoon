#include <iostream>
using namespace std;

int N, K;
int arr[500005];
int tmp[500005] = { 0 };
int cnt;
int ans=-1;

// 병합해줌
void merge(int a[], int p, int q, int r) {
	int i = p;
	int j = q + 1;
	int t = 1;

	while (i <= q && j <= r) {
		if (a[i] <= a[j]) {
			tmp[t] = a[i];
			t++;
			i++;
		}
		else {
			tmp[t] = a[j];
			t++;
			j++;
		}
	}
	while (i <= q) {
		tmp[t] = a[i];
		t++;
		i++;
	}
	while (j <= r) {
		tmp[t] = a[j];
		t++;
		j++;
	}
	i = p;
	t = 1;
	while (i <= r) {
		a[i] = tmp[t];
		i++;
		t++;
		cnt++;
		if (cnt == K) {
			ans = arr[i - 1];
			break;
		}
	}
}

void merge_sort(int a[], int p, int r) {
	if (p<r) {
		int q = (p + r) / 2; // q는 p,r의 중간 지점
		merge_sort(arr, p, q); // 전반부 정렬
		merge_sort(arr, q + 1, r); // 후반부 정렬
		merge(arr, p, q, r); // 병합
	}
}



int main() {

	cin >> N >> K;

	for (int i = 0; i < N; i++) {
		cin >> arr[i];
	}
	merge_sort(arr, 0, N - 1);
	cout << ans;
	return 0;
}
