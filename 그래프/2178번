#include <iostream>
#include <queue>
using namespace std;

int n, m;
int dx[4] = { -1,1,0,0 };
int dy[4] = { 0,0,-1,1 };
int Array[101][101];
int check[101][101];

void bfs(int a, int b) {
	queue<pair<int,int>> q;
	Array[a][b] = '0';
	q.push({ a,b });
	check[a][b]++;

	while (!q.empty()) {
		int x = q.front().first;
		int y = q.front().second;

		q.pop();
		for (int i = 0; i < 4; i++) {
			int nx = x + dx[i];
			int ny = y + dy[i];
			if (nx >= 0 && nx < n && ny >= 0 && ny < m && Array[nx][ny] == 1) {
				Array[nx][ny] = 0;
				q.push({ nx,ny });
				check[nx][ny] = check[x][y] + 1;
			}
		}
	}
}

int main() {
	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		string row;
		cin >> row;
		for (int j = 0; j < m; j++) {
			Array[i][j] = row[j] - '0';
		}
	}
	bfs(0, 0);
	cout << check[n - 1][m - 1];
	return 0;
}
