#include <iostream>
#include <vector>
#include <queue>
using namespace std;

char arr[601][601];
bool visit[601][601];
int dx[] = { -1,1,0,0 };
int dy[] = { 0,0,-1,1 };
int n, m, cnt;

void bfs(int x, int y) {
	visit[x][y] = true;
	queue<pair<int, int>> q;
	q.push({ x,y });

	while (!q.empty()) {
		int tmpx = q.front().first;
		int tmpy = q.front().second;
		q.pop();
		for (int i = 0; i < 4; i++) {
			int a = tmpx + dx[i];
			int b = tmpy + dy[i];
			if (a < 0 || a >= n || b < 0 || b >= m) {
				continue;
			}
			if (arr[a][b] == 'X') {
				continue;
			}
			if (visit[a][b]) {
				continue;
			}
			if (arr[a][b] == 'P') {
				cnt++;
			}
			visit[a][b] = true;
			q.push({ a,b });
		}
	}
}

int main() {

	cin >> n >> m;

	for (int i = 0; i < n; i++) {
		string s;
		cin >> s;
		for (int j = 0; j < m; j++) {
			arr[i][j] = s[j];
		}
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (arr[i][j] == 'I') {
				bfs(i, j);
			}
		}
	}
	if (cnt>0) {
		cout << cnt;
	}
	else {
		cout << "TT";
	}
	return 0;
}
