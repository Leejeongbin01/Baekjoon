#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

vector<int> v[1000001];
int visit[1000001] = { 0 };
int a[1000001];

void dfs(int x) {

	visit[x] = 1;

	for (int i = 0; i < v[x].size(); i++) {
		int next = v[x][i];
		if (visit[next] == 0) {
			//방문 x
			a[next] = x;
			dfs(next);
		}
	}
}

int main() {
	int n;
	cin >> n;

	for (int i = 0; i < n - 1; i++) {
		int a, b;
		cin >> a >> b;
		v[a].push_back(b);
		v[b].push_back(a);
	}
	for (int i = 1; i <= n; i++) {
		sort(v[i].begin(), v[i].end());
	}
	dfs(1);
	for (int i = 2; i <= n; i++) {
		cout << a[i] << "\n";
	}

	return 0;
}
