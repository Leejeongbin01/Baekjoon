#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

int n, m, r;
bool visited[200000]; //방문처리
vector<int> v[200000]; //간선 처리

int idx = 1;
int a[200000]; //출력 값 저장용도

void dfs(int x) {
	if (visited[x]) {
		return;
	} // 방문했다면 리턴
	visited[x] = true;  //방문했다고 표시
	a[x] = idx; //순서대로 출력이므로 방문 순으로 idx값 대입
	idx++;

	for (int i = 0; i < v[x].size(); i++) {
		int tmp = v[x][i];
		dfs(tmp);
	}
}

int main() {
	ios::sync_with_stdio(0); cin.tie(0);
	cin >> n >> m >> r;
	for (int i = 0; i < m; i++) {
		int a, b;
		cin >> a >> b;
		v[a].push_back(b);
		v[b].push_back(a);
	}
	for (int i = 1; i <= n; i++) {
		sort(v[i].begin(), v[i].end());
	}
	dfs(r);
	
	for (int i = 1; i <= n; i++) {
		cout << a[i] << "\n";
	}
	return 0;
}
