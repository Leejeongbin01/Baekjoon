#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
// 1. 일단 연결 2. 1번을 방문하는 수를 체크하자?
// 큐에 팝된 수를 카운트하자

vector<int> v[101];
int cnt = 0;
int visited[101] = { 0, };

void dfs(int x) {
	if (visited[x] == 1) {
		return;
	}
	visited[x] = 1;
	cnt++;
	for (int i = 0; i < v[x].size(); i++) {
		dfs(v[x][i]);
	}
}

int main() {
	int n, m;
	cin >> n >> m;
	for (int i = 1; i <= m; i++)
	{
		int a, b;
		cin >> a >> b;
		v[a].push_back(b);
		v[b].push_back(a);
	}
	for (int i = 1; i <= n; i++) {
		sort(v[i].begin(), v[i].end());
	}
	
	dfs(1);
	cout << cnt-1;
	return 0;
}
