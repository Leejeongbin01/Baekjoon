#include <iostream>
#include <vector>
using namespace std;

int get(string a, string b) {
	int distance = 0;
	for (int i = 0; i < 4; i++) {
		if (a[i] != b[i]) {
			distance++;
		}
	}
	return distance;
}

int main() {
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	int T;
	cin >> T;
	for (int i = 0; i < T; i++) {
		int N;
		cin >> N;

		vector<string> arr1;

		for (int j = 0; j < N; j++) {
			string str;
			cin >> str;
			arr1.push_back(str);
		}
		// 3개의 배열에 모두 값을 다 넣음
		// 같은 위치의 값을 패스하고 모든 경우를 세자
		if (N > 32) {
			cout << 0 << "\n";
		}
		else {
			int tmp = 100;
			for (int first = 0; first < N-2; first++) {
				for (int second = first+1; second < N-1; second++) {
					for (int third = second+1; third < N; third++) {
						tmp = min( tmp, get(arr1[first], arr1[second])+ get(arr1[first],arr1[third])+ get(arr1[second], arr1[third]));
					}
				}

			}
			cout << tmp << endl;
		}
	}

	return 0;
}


/////////////////////////////////////////////////////////////////////////////
// 처음짠 코드
#include <iostream>
#include <vector>
using namespace std;



int main() {
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	int T;
	cin >> T;
	for (int i = 0; i < T; i++) {
		int N;
		cin >> N;

		vector<string> arr1;
		vector<int> v; // 체크 값 저장
		int cnt = 0;  // 몇번 나왔는지 체크 

		for (int j = 0; j < N; j++) {
			string str;
			cin >> str;
			arr1.push_back(str);
		}
		// 3개의 배열에 모두 값을 다 넣음
		// 같은 위치의 값을 패스하고 모든 경우를 세자
		if (N > 32) {
			cout << 0 << "\n";
		}
		else {
			for (int first = 0; first < N-2; first++) {
				for (int second = first+1; second < N-1; second++) {
					for (int third = second+1; third < N; third++) {

						for (int tmp = 0; tmp < 4; tmp++) {
							if (arr1[first][tmp] != arr1[second][tmp]) {
								cnt++;
							}
							if (arr1[third][tmp] != arr1[second][tmp]) {
								cnt++;
							}
							if (arr1[first][tmp] != arr1[third][tmp]) {
								cnt++;
							}
						}
						v.push_back(cnt);
					}
				}

			}
			int mmin = *min_element(v.begin(), v.end());
			cout << mmin << "\n";
		}
	}

	return 0;
}
