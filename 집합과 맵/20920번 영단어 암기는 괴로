#include <iostream>
#include <vector>
#include <algorithm>
#include <unordered_map>
#include <set>
using namespace std;

unordered_map<string, int> v;

bool cmp(pair<string, int>& a, pair<string, int>& b) {
	if (a.second == b.second) {
		if (a.first.length() == b.first.length()) {
			return a.first < b.first;
		}
		else {
			return a.first.length() > b.first.length();
		}
	}
	else {
		return a.second < b.second;
	}
}

int main() {
	int n, m;
	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		string s;
		cin >> s;
		if (s.size() >= m) {
			v[s]++;
		}
	}
	vector<pair<string, int>> vec(v.begin(), v.end());
	sort(vec.begin(), vec.end(), cmp);
	for (auto p : vec) {
		cout << p.first << endl;
	}
	return 0;
}
